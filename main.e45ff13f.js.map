{"version":3,"sources":["scripts/main.js"],"names":["gameField","score","FIELD_SIZE","fieldCells","document","querySelectorAll","gameScore","querySelector","startButton","startMessage","winMessage","loseMessage","window","addEventListener","initializeGame","resetGame","className","textContent","classList","add","Array","fill","map","row","i","j","currentCell","id","updateCell","manageGame","addRandomCell","e","code","slideHorizontal","slideVertical","hasWon","hasLost","cells","contains","remove","removeEventListener","canMoveHorizontally","canMoveVertically","cell","value","hasEmptyCell","some","includes","isFound","Math","floor","random","column","randomValue","getElementById","slide","currentRow","filter","item","length","oldLength","direction","reverse","side"],"mappings":"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","file":"main.e45ff13f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst FIELD_SIZE = 4;\nlet gameField;\nlet score;\n\nconst fieldCells = document.querySelectorAll('td');\nconst gameScore = document.querySelector('.game-score');\nconst startButton = document.querySelector('.start');\nconst startMessage = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\n\nwindow.addEventListener('load', () => {\n  initializeGame();\n});\n\nconst resetGame = () => {\n  startButton.className = 'button restart';\n  startButton.textContent = 'Restart';\n  startMessage.classList.add('hidden');\n  winMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n\n  gameField = Array(FIELD_SIZE).fill(0)\n    .map(row => Array(FIELD_SIZE).fill(0));\n  score = 0;\n\n  for (let i = 0; i < FIELD_SIZE; i++) {\n    for (let j = 0; j < FIELD_SIZE; j++) {\n      const currentCell = fieldCells[i * FIELD_SIZE + j];\n\n      currentCell.id = (`${i}-${j}`);\n\n      const value = gameField[i][j];\n\n      updateCell(currentCell, value);\n    }\n  }\n\n  document.addEventListener('keyup', manageGame);\n\n  addRandomCell();\n  addRandomCell();\n};\n\nfunction initializeGame() {\n  startButton.addEventListener('click', resetGame);\n}\n\nfunction manageGame(e) {\n  switch (e.code) {\n    case 'ArrowLeft':\n      slideHorizontal('left');\n      addRandomCell();\n      break;\n\n    case 'ArrowRight':\n      slideHorizontal('right');\n      addRandomCell();\n      break;\n\n    case 'ArrowUp':\n      slideVertical('up');\n      addRandomCell();\n      break;\n\n    case 'ArrowDown':\n      slideVertical('down');\n      addRandomCell();\n      break;\n  }\n\n  gameScore.textContent = score;\n  hasWon();\n  hasLost();\n}\n\nfunction hasWon() {\n  const cells = document.querySelectorAll('td');\n\n  for (const cell of cells) {\n    if (cell.classList.contains('field-cell--2048')) {\n      winMessage.classList.remove('hidden');\n\n      document.removeEventListener('keyup', manageGame);\n    }\n  }\n}\n\nfunction hasLost() {\n  const hasNoMoves = !canMoveHorizontally('left')\n    && !canMoveHorizontally('right')\n    && !canMoveVertically('up')\n    && !canMoveVertically('down');\n\n  if (hasNoMoves) {\n    loseMessage.classList.remove('hidden');\n    document.removeEventListener('keyup', manageGame);\n  }\n}\n\nfunction updateCell(cell, value) {\n  cell.textContent = '';\n  cell.classList.value = '';\n  cell.classList.add('field-cell');\n\n  if (value > 0) {\n    cell.textContent = value;\n    cell.classList.add(`field-cell--${value}`);\n  }\n}\n\nfunction hasEmptyCell() {\n  return gameField.some(row => row.includes(0));\n}\n\nfunction addRandomCell() {\n  if (!hasEmptyCell()) {\n    return;\n  }\n\n  let isFound = false;\n\n  while (!isFound) {\n    const row = Math.floor(Math.random() * FIELD_SIZE);\n    const column = Math.floor(Math.random() * FIELD_SIZE);\n\n    if (gameField[row][column] === 0) {\n      const randomValue = Math.random() < 0.9 ? 2 : 4;\n\n      gameField[row][column] = randomValue;\n\n      const currentCell = document.getElementById(`${row}-${column}`);\n\n      currentCell.textContent = randomValue;\n      currentCell.classList.add(`field-cell--${randomValue}`);\n      isFound = true;\n    }\n  }\n}\n\nfunction slide(row) {\n  let currentRow = row.filter(item => item !== 0);\n\n  for (let i = 0; i < currentRow.length - 1; i++) {\n    if (currentRow[i] === currentRow[i + 1]) {\n      currentRow[i] *= 2;\n      currentRow[i + 1] = 0;\n      score += currentRow[i];\n    }\n  }\n\n  currentRow = currentRow.filter(item => item !== 0);\n\n  const oldLength = currentRow.length;\n\n  currentRow.length = FIELD_SIZE;\n  currentRow.fill(0, oldLength, FIELD_SIZE);\n\n  return currentRow;\n}\n\nfunction slideHorizontal(direction) {\n  for (let i = 0; i < FIELD_SIZE; i++) {\n    switch (direction) {\n      case 'right':\n        gameField[i] = slide(gameField[i].reverse()).reverse();\n        break;\n\n      case 'left':\n        gameField[i] = slide(gameField[i]);\n        break;\n    }\n\n    for (let j = 0; j < FIELD_SIZE; j++) {\n      const cell = document.getElementById(`${i}-${j}`);\n      const value = gameField[i][j];\n\n      updateCell(cell, value);\n    }\n  }\n}\n\nfunction slideVertical(direction) {\n  for (let j = 0; j < FIELD_SIZE; j++) {\n    let row = [\n      gameField[0][j],\n      gameField[1][j],\n      gameField[2][j],\n      gameField[3][j],\n    ];\n\n    switch (direction) {\n      case 'down':\n        row = slide(row.reverse()).reverse();\n        break;\n\n      case 'up':\n        row = slide(row);\n        break;\n    }\n\n    for (let i = 0; i < FIELD_SIZE; i++) {\n      gameField[i][j] = row[i];\n\n      const cell = document.getElementById(`${i}-${j}`);\n      const value = gameField[i][j];\n\n      updateCell(cell, value);\n    }\n  }\n}\n\nfunction canMoveHorizontally(side) {\n  for (let i = 0; i < FIELD_SIZE; i++) {\n    const row = gameField[i];\n\n    if (side === 'right') {\n      row.reverse();\n    }\n\n    for (let j = FIELD_SIZE; j > 0; j--) {\n      if (row[j] !== 0 && (row[j - 1] === 0 || row[j] === row[j - 1])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction canMoveVertically(side) {\n  for (let i = 0; i < FIELD_SIZE; i++) {\n    const row = [\n      gameField[0][i],\n      gameField[1][i],\n      gameField[2][i],\n      gameField[3][i],\n    ];\n\n    if (side === 'down') {\n      row.reverse();\n    }\n\n    for (let j = FIELD_SIZE - 1; j > 0; j--) {\n      if (row[j] !== 0 && (row[j - 1] === 0 || row[j] === row[j - 1])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n"]}